<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction name="buySeach" method="POST" resourcePath="/buySearch" id="5dd529f2-0c2c-4729-8807-3682f270dcb2" xmlns:con="http://eviware.com/soapui/config">
      <con:settings id="33df8eca-a383-4437-9cc6-570b3bb006b6">
        <con:setting id="ac8250b4-a453-4acb-ace2-9cb35ecec996fileName">buy</con:setting>
      <con:setting id="5dd529f2-0c2c-4729-8807-3682f270dcb2fileName">buySeach</con:setting></con:settings>
      <con:defaultResponse>ButResponse</con:defaultResponse>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchPath>def queryString = mockRequest.getRequest().getQueryString()
if (!queryString) {
    return "Missing required query parameters"
}

String[] fields = queryString.split("&amp;");
String[] kv;

HashMap&lt;String, String> params = new HashMap&lt;String, String>()
for (int i = 0; i &lt; fields.length; ++i){
    kv = fields[i].split("=");
    if (2 == kv.length)
     params.put(kv[0], kv[1]); 
}

if (!params.containsKey("buystring")) {
     return "Missing buystring parameter"
}
def buystring = URLDecoder.decode(params.get("buystring"), "UTF-8")

if (buystring == "all") 
 return "WildCard Response"
else if (buystring == "Item 1") 
 return "Item 1 Response"
else if (buystring == "Item 2") 
 return "Item 2 Response"
else if (buystring == "Item 3") 
 return "Item 3 Response"
else if (buystring == "Item 4") 
 return "Item 3 Response"
else if (buystring == "Item 5") 
 return "Item 5 Response"
else
return "Unknown Response" 
	


return "Search Response"</con:dispatchPath>
      <con:dispatchXPath/>
      <con:parameterDispatcherRuleContainer/>
      <con:routeScript/>
      <con:response name="ButResponse" id="27aee1c6-9621-44c0-b0fd-5944d95e1a2b" httpResponseStatus="201" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200035a000a636f6d707265737365644c000b636f6d7072657373696f6e74003d4c636f6d2f657669776172652f736f617075692f696d706c2f737570706f72742f436f6d7072657373656456616c756524436f6d7072657373696f6e3b5b0004646174617400025b427870007e72003b636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c756524436f6d7072657373696f6e00000000000000001200007872000e6a6176612e6c616e672e456e756d000000000000000012000078707400044e4f4e4570">
        <con:settings/>
        <con:responseContent>{
  "purchasestatus": {
    "id": "Item 1",
    "stockStatus": "1 unit",
    "expectedDelivery": "2000 years from now"
  }
}</con:responseContent>
      </con:response>
      <con:response name="Item 2 Response" id="a4f6a928-9e45-4b27-8b84-0db0de73290b" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
        <con:settings/>
        <con:responseContent>{
  "purchasestatus": {
    "id": "Item 2",
    "stockStatus": "10 000 boxes",
    "expectedDelivery": "1 week"
  }
}</con:responseContent>
      </con:response>
      <con:response name="Item 3 Response" id="f0f8e606-5731-44fc-8470-fb60257f52ec" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
        <con:settings/>
        <con:responseContent>{
  "purchasestatus": {
    "id": "Item 3",
    "stockStatus": "4 towels",
    "expectedDelivery": "Any day now..."
  }
}</con:responseContent>
      </con:response>
      <con:response name="Item 4 Response" id="d1cf91f3-11ea-4653-aa8a-311caab4372d" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent>{
  "purchasestatus": {
    "id": "Item 4",
    "stockStatus": "1 unit",
    "expectedDelivery": "In the near future."
  }
}</con:responseContent>
      </con:response>
      <con:response name="Item 5 Response" id="fd1ae3e4-37d3-40c7-9a4c-deb4dee9a21e" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent>{
  "purchasestatus": {
    "id": "Item 5",
    "stockStatus": "1 license",
    "expectedDelivery": "You should already have it."
  }
}</con:responseContent>
      </con:response>
      <con:response name="Invalid Session Id Fault" id="cc59525e-e959-40f1-9dae-867a07deadcd" httpResponseStatus="401" dataSource="">
        <con:settings/>
        <con:responseContent>{ "Client" : "Invalid Session Id" }</con:responseContent>
      </con:response>
      <con:response name="Unknown Response" id="01416a0b-827d-4474-ac63-947d9afc978a" httpResponseStatus="501" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
      <con:response name="WildCard Response" id="fff71dc4-0c6e-428d-97ad-5cd35dee9f99" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200035a000a636f6d707265737365644c000b636f6d7072657373696f6e74003d4c636f6d2f657669776172652f736f617075692f696d706c2f737570706f72742f436f6d7072657373656456616c756524436f6d7072657373696f6e3b5b0004646174617400025b427870007e72003b636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c756524436f6d7072657373696f6e00000000000000001200007872000e6a6176612e6c616e672e456e756d000000000000000012000078707400044e4f4e4570">
        <con:settings/>
        <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
      </con:response>
    </con:restMockAction>